<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context-2.5.xsd   
http://www.springframework.org/schema/aop   
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">



<!-- 缓存客户端 -->
	<!-- bean id="memCached" class="com.iscreate.op.service.rno.MemCached" factory-method="getMemCachedClient" 
		> </bean> -->
	<bean name="memCached"
		class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean"
		destroy-method="shutdown">
		<property name="servers">
			<value>192.168.6.41:11211</value>
		</property>
	</bean>
	<!-- 引入Memcached客户端结束 -->

	<!-- 数据源相同的内容 -->
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="maxPoolSize" value="10" />
		<property name="minPoolSize" value="5" />
		<property name="initialPoolSize" value="10" />
		<!-- 数据库重连设置 -->
		<property name="maxIdleTime" value="3600" />
		<!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒 -->
		<!-- <property name="testConnectionOnCheckin" value="true"/> -->
		<property name="idleConnectionTestPeriod" value="120" />
		<!--c3p0将建一张名为C3p0Test的空表，并使用其自带的查询语句进行测试。 -->
		<!--如果定义了这个参数那么属性preferredTestQuery将被忽略。 -->
	</bean>

	<!-- rno数据库 -->
	<bean parent="parentDataSource" id="rnoDataSource">
	    <property name="maxPoolSize" value="5" />
		<property name="minPoolSize" value="1" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.6.40:1521:testora"></property>
		<property name="user" value="mobile_dev"></property>
		<property name="password" value="mdev12345678"></property>
	</bean>
	<!-- 权限验证数据库 -->
	<bean parent="parentDataSource" id="authDataSource">
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.6.40:1521:testora"></property>
		<property name="user" value="mobile_dev"></property>
		<property name="password" value="mdev12345678"></property>
		<property name="maxPoolSize" value="5" />
		<property name="minPoolSize" value="1" />
	</bean>
	<!-- 物理网络数据库 -->
	<bean parent="parentDataSource" id="netResDataSource">
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.6.40:1521:testora"></property>
		<property name="user" value="mobile_dev"></property>
		<property name="password" value="mdev12345678"></property>
	</bean>

	<!-- 编写spring 配置文件的配置多数源映射关系 -->
	<bean id="oracleDataSource" class="com.iscreate.plat.system.datasourcectl.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="rnoDataSource" key="rnoDataSource"></entry>
				<entry value-ref="authDataSource" key="authDataSource"></entry>
				<entry value-ref="netResDataSource" key="netResDataSource"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="rnoDataSource">
		</property>
	</bean>


	<!-- 数据库源选择的切面控制器 -->
	<bean id="dataSourceInterceptor"
		class="com.iscreate.plat.system.datasourcectl.DataSourceInterceptor"></bean>

	  <aop:config>
		<aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor">
		    <aop:before pointcut="execution(* com.iscreate.op.dao.rno..*.*(..))"
				method="setRnoDataSource" />
			<aop:before pointcut="execution(* com.iscreate.plat.login.action.LoginAction.*(..))"
				method="setAuthDataSource" />
			<aop:before pointcut="execution(* com.iscreate.op.dao.system.*.*(..))"
				method="setAuthDataSource" />
			<aop:before pointcut="execution(* com.iscreate.plat..*Dao*.*(..))"
				method="setAuthDataSource" /> 
			<aop:before pointcut="execution(* com.iscreate.plat.networkresource.dataservice.SqlDatabaseService*.*(..))"
				method="setNetResDataSource" /> 
			<aop:before pointcut="execution(* com.iscreate.plat.networkresource.common.dao.*.*(..))"
				method="setNetResDataSource" />
		</aop:aspect>
	</aop:config>  
	<!-- 测试数据库 datasource -->
	<bean id="oldDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.6.40:1521:testora"></property>
		<property name="user" value="iosm5"></property>
		<property name="password" value="123456"></property>
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="10" />
		<property name="initialPoolSize" value="10" />
		<!-- 数据库重连设置 -->
		<property name="maxIdleTime" value="3600" />
		<!--每隔12 0秒检查连接池里的空闲连接
		，单位是秒 -->
		<property name="testConnectionOnCheckin" value="true" />
		<property name="idleConnectionTestPeriod" value="120" />
		<!-- c3p0将建一张名为C3p0Test的空表，并使用其自带的查询语句进行测试。
		如果定义了这个参数那么属性preferredTestQuery将被忽略。 -->
	</bean>


	<!-- 注册sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="oracleDataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
		<!-- 		<prop key="hibernate.show_sql"> true </prop>  -->
			</props>
		</property>
		<!-- property name="mappingResources"> <list> <value>com/iscreate/bizunit/vo/*.hbm.xml</value> 
			<value>com/iscreate/workflow/model/*.hbm.xml</value> <value>jbpm.repository.hbm.xml</value> 
			<value>jbpm.execution.hbm.xml</value> <value>jbpm.history.hbm.xml</value> 
			<value>jbpm.task.hbm.xml</value> <value>jbpm.identity.hbm.xml</value> </list> 
			</property -->
		<property name="mappingLocations">
			<list>
				<value>**/*.hbm.xml</value>
			</list>
		</property>

	</bean>


	<!-- 注册事务管理器 -->
	<bean id="transactionManager" name="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<!-- helper -->
	<bean id="gson" class="com.google.gson.Gson" />
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


</beans>
